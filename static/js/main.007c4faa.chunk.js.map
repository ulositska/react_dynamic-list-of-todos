{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","selectedTodo","onSelect","className","cn","id","completed","title","type","onClick","TodoList","todos","map","TodoFilter","filterBy","setFilterBy","searchQuery","setSearchQuery","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","planner","setPlanner","useEffect","userId","userFromServer","href","email","name","App","setTodos","isLoaded","setIsLoaded","setSelectedTodo","todosFromServer","visibleTodos","allTodos","completionStatus","searchInput","filteredByStatusTodos","filter","Error","normalizedQuery","trim","toLowerCase","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.007c4faa.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo | null) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  onSelect,\n}) => {\n  return (\n    // className=\"has-background-info-light\" for selected!NB\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': selectedTodo === todo,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={\n          todo.completed\n            ? 'has-text-success'\n            : 'has-text-danger'\n        }\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelect(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': selectedTodo !== todo,\n                'fa-eye-slash': selectedTodo === todo,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  onSelect: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            selectedTodo={selectedTodo}\n            onSelect={onSelect}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  filterBy: string;\n  setFilterBy: (newFilter: string) => void;\n  searchQuery: string;\n  setSearchQuery:(newQuery: string) => void;\n};\n\nexport const TodoFilter:FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  searchQuery,\n  setSearchQuery,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value);\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [planner, setPlanner] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(userFromServer => {\n        setPlanner(userFromServer);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!planner ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${planner.email}`}>\n                {planner?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<string>('all');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setIsLoaded(true);\n      });\n  }, []);\n\n  const filterTodos = (\n    allTodos:Todo[],\n    completionStatus:string,\n    searchInput: string,\n  ) => {\n    let filteredByStatusTodos = [...allTodos];\n\n    switch (completionStatus) {\n      case 'all':\n        break;\n      case 'active':\n        filteredByStatusTodos = filteredByStatusTodos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        filteredByStatusTodos = filteredByStatusTodos.filter(todo => todo.completed);\n        break;\n      default:\n        throw new Error();\n    }\n\n    const normalizedQuery = searchInput.trim().toLowerCase();\n\n    return filteredByStatusTodos\n      .filter(todo => todo.title\n        .trim()\n        .toLowerCase()\n        .includes(normalizedQuery));\n  };\n\n  const visibleTodos = filterTodos(todos, filterBy, searchQuery);\n\n  const selectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const unselectTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelect={selectTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={unselectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}